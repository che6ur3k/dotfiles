set -g mouse on

# Emulate scrolling by sending up and down keys if these commands are running in the pane
_tmux_commands_with_legacy_scroll="nano less more man git"
bind-key -T root WheelUpPane \
  if-shell -Ft= '#{?mouse_any_flag,1,#{pane_in_mode}}' \
    'send -Mt=' \
    'if-shell -t= "#{?alternate_on,true,false} || echo \"#{_tmux_commands_with_legacy_scroll}\" | grep -q \"#{pane_current_command}\"" \
      "send -t= Up" "copy-mode -et="'
bind-key -T root WheelDownPane \
  if-shell -Ft = '#{?pane_in_mode,1,#{mouse_any_flag}}' \
    'send -Mt=' \
    'if-shell -t= "#{?alternate_on,true,false} || echo \"#{_tmux_commands_with_legacy_scroll}\" | grep -q \"#{pane_current_command}\"" \
      "send -t= Down" "send -Mt="'

set -g default-terminal "screen-256color"

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1

# prefix
unbind C-b
set -g prefix `
bind ` send-prefix

# more useable bindings
unbind %
unbind '"'
unbind h
bind-key h split-window -h
bind-key v split-window -v
bind-key X kill-pane
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# log output
bind L pipe-pane -o "cat >>~/#W.log" \; display "Toggled logging to ~/#W.log"

# renumber windows
set -g renumber-windows on

# no escape delay
set -s escape-time 0

# --- Define colour scheme --- #
_tmux_white=colour15
_tmux_black=colour232
_tmux_red=colour1
_tmux_purple=colour54
_tmux_grey_l=colour145
_tmux_grey_d=colour236
_tmux_blue=colour25
_tmux_blue_d=colour17
# ---------------------------- #

# Panes
set -g pane-active-border-style "fg=$_tmux_blue"
set -g message-style "fg=$_tmux_white,bg=$_tmux_grey_d"
set -g pane-border-style "fg=white"
set -g display-panes-colour "black"
set -g display-panes-active-colour "white"
set -g pane-border-status "off"
set -g pane-border-format "[#[fg=white]#{?pane_active,#[bold],} #P #[fg=default,nobold]]"

# Auto hide pane-border-status line when only one pane is displayed (see tmux/tmux#566)
set-hook -g 'after-new-session'  'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
set-hook -g 'after-new-window'   'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
set-hook -g 'after-kill-pane'    'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
set-hook -g 'pane-exited'        'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
set-hook -g 'after-split-window' 'run-shell -b "if [ \#{window_panes} -gt 1 ]; then tmux set pane-border-status top; fi"'

# Messages
set -g message-command-style "fg=$_tmux_grey_l,bg=$_tmux_grey_d"
set -g display-time 5000

# focus events
set -g focus-events on

# increase history limit
set -g history-limit 1000000

# set terminal window title
set -g set-titles on
set -g set-titles-string '#H #W'

# notifications and bells
set -g bell-action any
set -g visual-bell off

## Variables
_tmux_status_bg="#{?pane_in_mode,$_tmux_blue_d,#{?pane_synchronized,${_tmux_purple},${_tmux_blue}}}"
_tmux_prefix_on="#[fg=$_tmux_white,bg=$_tmux_status_bg,bold] #{?client_prefix,=, } "

## Line definition
set -g status-justify "left"
set -g status "on"
set -g status-left-style "none"
set -g status-right-style "none"
set -g status-style "fg=$_tmux_grey_d,bg=$_tmux_black,none"
set -g status-right-length "120"
set -g status-left-length "120"
setw -g window-status-activity-style "fg=$_tmux_red,bg=$_tmux_black,none"
set -g status-left "${_tmux_prefix_on}#[fg=$_tmux_white,bg=$_tmux_status_bg]#H${_tmux_prefix_on}#[fg=$_tmux_grey_d,bg=$_tmux_black]"
set -g status-right "#[fg=$_tmux_white,bg=$_tmux_status_bg] #(uptime | awk '{print \"up \" $3 \" \" $4 \" \" $5 \", LA: \" $10}') #(free -h | awk '/^Mem/{print $7 \",\"}') #(df -h | awk 'BEGIN{a=0}{if ($5>0+a) a=$5} END{print a}')  #(ip r | awk '/default/ {print $5}' | xargs ip a show | awk '/inet /{print $2}') "
setw -g window-status-format "#[fg=$_tmux_white,bg=$_tmux_black] #{?window_last_flag,:, }#I#{?window_last_flag,:, }#[fg=$_tmux_grey_l,bg=$_tmux_black] #W #{?#{!=:#{window_panes},1},(#{window_panes}) ,}"
setw -g window-status-current-format "#[fg=$_tmux_white,bg=$_tmux_grey_d,bold]#{?window_zoomed_flag,#[bg=$_tmux_red],} [#I] #W #{?#{!=:#{window_panes},1},(#{window_panes}) ,}#[fg=$_tmux_grey_l,bg=$_tmux_black]"
setw -g window-status-separator "â”ƒ"
set -g status-interval 10
